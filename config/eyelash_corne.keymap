#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        qa-1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <1 14>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        ws-2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <2 15>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        ed-3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <3 16>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        rf-4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <4 17>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        tg-5 {
            bindings = <&kp N5>;
            key-positions = <5 18>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        yh-6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <7 22>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        uj-7 {
            bindings = <&kp N7>;
            key-positions = <8 23>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        ik-8 {
            bindings = <&kp N8>;
            key-positions = <9 24>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        ol-9 {
            bindings = <&kp N9>;
            key-positions = <10 25>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        pp-0 {
            bindings = <&kp N0>;
            key-positions = <11 26>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        bsp {
            bindings = <&kp BACKSPACE>;
            key-positions = <11 10>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        enter {
            bindings = <&kp RETURN>;
            key-positions = <25 26>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <9 11>;
            timeout-ms = <50>;
            require-prior-idle-ms = <30>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T                                        &kp UP                &kp Y        &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G                              &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K          &kp L    &kp SEMI  &kp RETURN
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &kp B                 &kp SPACE              &kp DOWN              &kp N        &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LEFT_ALT  &mo 3  &mt LEFT_SHIFT SPACE                                               &lt 1 SPACE  &mo 2  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1          &kp N2        &kp N3        &kp N4        &kp N5                                      &mmv MOVE_UP                     &kp N6         &kp N7           &kp N8         &kp N9     &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LG(SPACE)  &mkp MB1         &kp UP         &mkp MB2   &kp HOME  &kp PG_UP
&trans  &bt BT_CLR      &out OUT_BLE  &out OUT_USB  &trans        &trans        &kp C_MUTE                    &mmv MOVE_DOWN                   &none          &kp LEFT_ARROW   &kp DOWN       &kp RIGHT  &kp END   &kp PG_DN
                                      &kp LEFT_ALT  &mo 1         &kp SPACE                                                                    &kp SPACE      &kp PRINTSCREEN  &kp RIGHT_GUI
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK      &kp LPAR          &kp RPAR      &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK     &mkp RCLK  &none                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT       &kp RBKT          &kp SEMI      &kp RETURN
&trans  &out OUT_USB  &out OUT_BLE  &out OUT_TOG  &kp TILDE  &kp GRAVE  &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &kp RIGHT_SHIFT
                                    &trans        &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &none     &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
